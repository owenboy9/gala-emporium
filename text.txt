day one (present: Zeinab, Erik, Micke, owen; Lovisa on the phone). 

we begun by imagining the venue's functionality in general: it's a space all the different clubs can rent (we couldn't agree upon whether the venue will serve cocktails or not, for example).
to make that simpler, we sketched very general wireframes (main page, club page, event page; owen insisted on sketching a cocktail menu & venue concept wireframe). questions that arose from discussing those were:
1) if the venue ends up hosting, say, 20 clubs, how do we present them (we want to have clubs' logos/pics/etc on our homepage, linked to the clubs' pages) on our homepage? we came up with the idea of rotating display: the clubs that are active, say, this week come to the top of a scrollable list.
2) if we choose to offer a standardized html-css club page scaffolding, what components will be obligatory for the club owners to provide? we made a preliminary list thereof (background pic + more visuals, name, description, events, gala emporium’s logo, logo (also reusable for the general event calendar), color palette)
3) ideally, we would work with databases: separate ones for clubs and events? probably just one database.
4) event calendar on our homepage: preferably a full week's events always visible; tonight's event highlighted. scrollable list of upcoming stuff.

we decided four of us would come up with, design, and code their own club's page, and one of us (owen) would take care of the venue's site (homepage). 

we are discussing pros and cons of a one-pager solution versus separate html club sites

in more measurable terms, we have:
1) set up a github repository
2) set up a trello workspace
3) chosen a scrum master (Lovisa)
4) had a focused workflow planning meeting



day two (present: everyone).

we presented the product owner with a long list of user stories, which they will soon rearrange according to their priorities.

meeting: 
1) go through our sketches over sites.
2) recap from meeting with our product owner: focus on presentation on monday, use mock data so far, database to fetch data from, not add to it. step two – let club owners add events.
3) ER diagrams to figure out our database needs.
4) we can begin to code our sites (html, css)
5) recap what linus talked about in the morning

discussion: pros and cons with more or less extensive club & calendar presentation on our homepage. we consider how to tease visitors to become more curious about what happens here. practicalities around what & when. 

homepage: we agree on a sexy wireframe
club pages AND events: take same layout as homepage. header, roll-down menu, calendar, and footer stay (almost) unchanged. every club has only its own calendar though.

er-diagram: Erik & Micke will do

we discuss our database structure (three tables: users, clubs, events)
everyone else looks for their content
code page scaffolding – begin together tomorrow
discuss css solutions for different image sizes



day three.

nothing much done in terms of project progress: the day went by, filled with nerve-wracking attempts at connecting servers to databases, making datagrip work, and fighting docker. still: Erik managed to draw a meaningful ER diagram, and begun to figure out all the keys it requires. our product owner rearranged our user stories according to their priorities. we got a clearer understanding of GET, PUT, and DELETE as well as git merge strategies. owen cleared out our main branch on github. tomorrow we will together build a skeletal version of our homepage (blueprint for club sites), together try to solve the server-database connection issue, and set up a functional base for more nuanced work on the website. 



day four.

we had an actual standup meeting: we laid pretty stable ground and schedule for today's process.
before noon, we discussed & adjusted the ER diagram Erik had prepared. then we collectively built our database, which we then added items to, everyone on their own.
after lunch – create homepage blueprint and connect it to db. upload it all on github.